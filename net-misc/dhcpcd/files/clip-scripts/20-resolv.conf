# Generate /etc/resolv.conf
# Support resolvconf(8) if available
# We can merge other dhcpcd resolv.conf files into one like resolvconf,
# but resolvconf is preferred as other applications like VPN clients
# can readily hook into it.
# Also, resolvconf can configure local nameservers such as bind
# or dnsmasq. This is important as the libc resolver isn't that powerful.

source /etc/conf.d/net || exit 1

[[ -n "${DHCP_RESOLV_CONF}" ]] || exit 1

add_resolv_conf()
{
	local x= conf="${signature}\n"

	# If we don't have any configuration, remove it
	if [ -z "${new_domain_name_servers}" -a \
		-z "${new_domain_name}" -a \
		-z "${new_domain_search}" ]; then
		remove_resolv_conf
		return $?
	fi

	if [ -n "${new_domain_search}" ]; then
		conf="${conf}search ${new_domain_search}\n"
	elif [ -n "${new_domain_name}" ]; then
		conf="${conf}search ${new_domain_name}\n"
	fi
	for x in ${new_domain_name_servers}; do
		conf="${conf}nameserver ${x}\n"
	done
	
	local mask=$(umask)
	umask 0022

	if [[ -f "${DHCP_RESOLV_CONF}" && ! -f "${DHCP_RESOLV_CONF}.orig" ]] ; then
		cp -pP "${DHCP_RESOLV_CONF}" "${DHCP_RESOLV_CONF}.orig"
	fi
	if [[ ! -e "${DHCP_RESOLV_CONF}" || -f "${DHCP_RESOLV_CONF}" ]]; then
		printf "${conf}" > "${DHCP_RESOLV_CONF}"
		chown 4000:4000 "${DHCP_RESOLV_CONF}"
		chmod a+r "${DHCP_RESOLV_CONF}"
	fi
	umask ${mask}
}

remove_resolv_conf()
{
	local mask=$(umask)
	umask 0022

	if [[ -e "${DHCP_RESOLV_CONF}.orig" ]]; then
		cp -pP "${DHCP_RESOLV_CONF}.orig" "${DHCP_RESOLV_CONF}"
	else 
		rm -f "${DHCP_RESOLV_CONF}"
		touch "${DHCP_RESOLV_CONF}"
	fi
	chown 4000:4000 "${DHCP_RESOLV_CONF}"

	umask ${mask}
}

case "${reason}" in
BOUND|INFORM|REBIND|REBOOT|RENEW|TIMEOUT)	add_resolv_conf;;
PREINIT|EXPIRE|FAIL|IPV4LL|RELEASE|STOP)	remove_resolv_conf;;
esac
