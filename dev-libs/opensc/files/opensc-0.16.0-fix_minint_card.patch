Index: OpenSC/src/libopensc/card-iasecc.c
===================================================================
--- OpenSC.orig/src/libopensc/card-iasecc.c
+++ OpenSC/src/libopensc/card-iasecc.c
@@ -264,6 +264,9 @@ iasecc_select_mf(struct sc_card *card, s
 		apdu.resplen = sizeof(apdu_resp);
 		apdu.resp = apdu_resp;
 
+		if (card->type == SC_CARD_TYPE_IASECC_MI2)
+			apdu.p2 = 0x04;
+
 		rv = sc_transmit_apdu(card, &apdu);
 		LOG_TEST_RET(card->ctx, rv, "APDU transmit failed");
 		rv = sc_check_sw(card, apdu.sw1, apdu.sw2);
@@ -323,6 +326,9 @@ iasecc_select_aid(struct sc_card *card,
 	apdu.resplen = sizeof(apdu_resp);
 	apdu.resp = apdu_resp;
 
+	if (card->type == SC_CARD_TYPE_IASECC_MI2)
+		apdu.p2 = 0x04;
+
 	rv = sc_transmit_apdu(card, &apdu);
 	LOG_TEST_RET(card->ctx, rv, "APDU transmit failed");
 	rv = sc_check_sw(card, apdu.sw1, apdu.sw2);
@@ -610,12 +616,20 @@ iasecc_init_mi(struct sc_card *card)
 	card->caps |= SC_CARD_CAP_APDU_EXT;
 	card->caps |= SC_CARD_CAP_USE_FCI_AC;
 
-    resp_len = sizeof(resp);
-    rv = iasecc_select_aid(card, &MIIASECC_AID, resp, &resp_len);
-    LOG_TEST_RET(ctx, rv, "Could not select MI's AID");
+	resp_len = sizeof(resp);
+	rv = iasecc_select_aid(card, &MIIASECC_AID, resp, &resp_len);
+	LOG_TEST_GOTO_ERR(ctx, rv, "Could not select MI's AID");
 
 	rv = iasecc_mi_match(card);
-    LOG_TEST_RET(ctx, rv, "Could not match MI's AID");
+	LOG_TEST_GOTO_ERR(ctx, rv, "Could not match MI's AID");
+
+	LOG_FUNC_RETURN(ctx, SC_SUCCESS);
+
+err:
+	card->type = SC_CARD_TYPE_IASECC_MI2;
+
+	rv = iasecc_init_sagem(card);
+	LOG_TEST_RET(ctx, rv, "Could not fallback to generic IAS/ECC Sagem/Morpho");
 
 	LOG_FUNC_RETURN(ctx, SC_SUCCESS);
 }
@@ -936,7 +950,8 @@ iasecc_select_file(struct sc_card *card,
 				&& card->type != SC_CARD_TYPE_IASECC_OBERTHUR
 				&& card->type != SC_CARD_TYPE_IASECC_SAGEM
 				&& card->type != SC_CARD_TYPE_IASECC_AMOS
-				&& card->type != SC_CARD_TYPE_IASECC_MI)
+				&& card->type != SC_CARD_TYPE_IASECC_MI
+				&& card->type != SC_CARD_TYPE_IASECC_MI2)
 			LOG_TEST_RET(ctx, SC_ERROR_NOT_SUPPORTED, "Unsupported card");
 
 		if (lpath.type == SC_PATH_TYPE_FILE_ID)   {
@@ -949,6 +964,8 @@ iasecc_select_file(struct sc_card *card,
 				apdu.p2 = 0x04;
 			if (card->type == SC_CARD_TYPE_IASECC_MI)
 				apdu.p2 = 0x04;
+			if (card->type == SC_CARD_TYPE_IASECC_MI2)
+				apdu.p2 = 0x04;
 		}
 		else if (lpath.type == SC_PATH_TYPE_FROM_CURRENT)  {
 			apdu.p1 = 0x09;
@@ -958,6 +975,8 @@ iasecc_select_file(struct sc_card *card,
 				apdu.p2 = 0x04;
 			if (card->type == SC_CARD_TYPE_IASECC_MI)
 				apdu.p2 = 0x04;
+			if (card->type == SC_CARD_TYPE_IASECC_MI2)
+				apdu.p2 = 0x04;
 		}
 		else if (lpath.type == SC_PATH_TYPE_PARENT)   {
 			apdu.p1 = 0x03;
@@ -968,6 +987,8 @@ iasecc_select_file(struct sc_card *card,
 			apdu.p1 = 0x04;
 			if (card->type == SC_CARD_TYPE_IASECC_AMOS)
 				apdu.p2 = 0x04;
+			if (card->type == SC_CARD_TYPE_IASECC_MI2)
+				apdu.p2 = 0x04;
 		}
 		else   {
 			sc_log(ctx, "Invalid PATH type: 0x%X", lpath.type);
Index: OpenSC/src/libopensc/cards.h
===================================================================
--- OpenSC.orig/src/libopensc/cards.h
+++ OpenSC/src/libopensc/cards.h
@@ -201,6 +201,7 @@ enum {
 	SC_CARD_TYPE_IASECC_SAGEM,
 	SC_CARD_TYPE_IASECC_AMOS,
 	SC_CARD_TYPE_IASECC_MI,
+	SC_CARD_TYPE_IASECC_MI2,
 
 	/* SmartCard-HSM */
 	SC_CARD_TYPE_SC_HSM = 26000,
