--- a/auto/os/linux
+++ b/auto/os/linux
@@ -179,6 +179,23 @@ ngx_feature_test="struct crypt_data  cd;
 . auto/feature
 
 
+# clip_chroot()
+
+ngx_feature="CLIP"
+# Leave ngx_feature_name empty to fail if clip_chroot is not used.
+ngx_feature_name=
+ngx_feature_run=yes
+ngx_feature_incs="#include <clip/clip.h>"
+ngx_feature_path=
+ngx_feature_libs=-lclip
+ngx_feature_test="char *dir = \"/\"; (void)clip_chroot(dir);"
+. auto/feature
+
+if [ $ngx_found = yes ]; then
+	CORE_LIBS="$CORE_LIBS -lclip"
+fi
+
+
 ngx_include="sys/vfs.h";     . auto/include
 
 
--- a/src/os/unix/ngx_process_cycle.c
+++ b/src/os/unix/ngx_process_cycle.c
@@ -10,6 +10,8 @@
 #include <ngx_event.h>
 #include <ngx_channel.h>
 
+#include <clip/clip.h>
+
 
 static void ngx_start_worker_processes(ngx_cycle_t *cycle, ngx_int_t n,
     ngx_int_t type);
@@ -866,6 +868,15 @@ ngx_worker_process_init(ngx_cycle_t *cyc
 
     ccf = (ngx_core_conf_t *) ngx_get_conf(cycle->conf_ctx, ngx_core_module);
 
+    if (ccf->working_directory.len) {
+        if (clip_chroot((char *) ccf->working_directory.data) == -1) {
+            ngx_log_error(NGX_LOG_ALERT, cycle->log, ngx_errno,
+                          "clip_chroot(\"%s\") failed", ccf->working_directory.data);
+            /* fatal */
+            exit(2);
+        }
+    }
+
     if (worker >= 0 && ccf->priority != 0) {
         if (setpriority(PRIO_PROCESS, 0, ccf->priority) == -1) {
             ngx_log_error(NGX_LOG_ALERT, cycle->log, ngx_errno,
@@ -938,6 +949,7 @@ ngx_worker_process_init(ngx_cycle_t *cyc
         }
     }
 
+#if 0
 #if (NGX_HAVE_PR_SET_DUMPABLE)
 
     /* allow coredump after setuid() in Linux 2.4.x */
@@ -948,15 +960,7 @@ ngx_worker_process_init(ngx_cycle_t *cyc
     }
 
 #endif
-
-    if (ccf->working_directory.len) {
-        if (chdir((char *) ccf->working_directory.data) == -1) {
-            ngx_log_error(NGX_LOG_ALERT, cycle->log, ngx_errno,
-                          "chdir(\"%s\") failed", ccf->working_directory.data);
-            /* fatal */
-            exit(2);
-        }
-    }
+#endif
 
     sigemptyset(&set);
 
