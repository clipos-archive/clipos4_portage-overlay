--- wpa_supplicant/ctrl_iface.c.orig	2016-10-02 20:51:11.000000000 +0200
+++ wpa_supplicant/ctrl_iface.c	2017-10-17 11:26:54.572174187 +0200
@@ -8661,6 +8661,7 @@
 	const int reply_size = 4096;
 	int reply_len;
 
+#if 0 /* CLIP: disable dangerous commands from ctrl interface */
 	if (os_strncmp(buf, WPA_CTRL_RSP, os_strlen(WPA_CTRL_RSP)) == 0 ||
 	    os_strncmp(buf, "SET_NETWORK ", 12) == 0) {
 		if (wpa_debug_show_keys)
@@ -8680,6 +8681,7 @@
 		int level = wpas_ctrl_cmd_debug_level(buf);
 		wpa_dbg(wpa_s, level, "Control interface command '%s'", buf);
 	}
+#endif /* CLIP: disable dangerous commands from ctrl interface */
 
 	reply = os_malloc(reply_size);
 	if (reply == NULL) {
@@ -8701,6 +8703,7 @@
 			reply_len = -1;
 	} else if (os_strncmp(buf, "NOTE ", 5) == 0) {
 		wpa_printf(MSG_INFO, "NOTE: %s", buf + 5);
+#if 0 /* CLIP: disable dangerous commands from ctrl interface */
 	} else if (os_strcmp(buf, "MIB") == 0) {
 		reply_len = wpa_sm_get_mib(wpa_s->wpa, reply, reply_size);
 		if (reply_len >= 0) {
@@ -8708,9 +8711,11 @@
 						      reply + reply_len,
 						      reply_size - reply_len);
 		}
+#endif /* CLIP: disable dangerous commands from ctrl interface */
 	} else if (os_strncmp(buf, "STATUS", 6) == 0) {
 		reply_len = wpa_supplicant_ctrl_iface_status(
 			wpa_s, buf + 6, reply, reply_size);
+#if 0 /* CLIP: disable dangerous commands from ctrl interface */
 	} else if (os_strcmp(buf, "PMKSA") == 0) {
 		reply_len = wpas_ctrl_iface_pmksa(wpa_s, reply, reply_size);
 	} else if (os_strcmp(buf, "PMKSA_FLUSH") == 0) {
@@ -8728,6 +8733,7 @@
 		eapol_sm_notify_logoff(wpa_s->eapol, FALSE);
 	} else if (os_strcmp(buf, "LOGOFF") == 0) {
 		eapol_sm_notify_logoff(wpa_s->eapol, TRUE);
+#endif /* CLIP: disable dangerous commands from ctrl interface */
 	} else if (os_strcmp(buf, "REASSOCIATE") == 0) {
 		if (wpa_s->wpa_state == WPA_INTERFACE_DISABLED)
 			reply_len = -1;
@@ -8746,6 +8752,7 @@
 			reply_len = -1;
 		else if (wpa_s->disconnected)
 			wpas_request_connection(wpa_s);
+#if 0 /* CLIP: disable dangerous commands from ctrl interface */
 #ifdef IEEE8021X_EAPOL
 	} else if (os_strncmp(buf, "PREAUTH ", 8) == 0) {
 		if (wpa_supplicant_ctrl_iface_preauth(wpa_s, buf + 8))
@@ -8761,6 +8768,7 @@
 		if (wpa_supplicant_ctrl_iface_ft_ds(wpa_s, buf + 6))
 			reply_len = -1;
 #endif /* CONFIG_IEEE80211R */
+#endif /* CLIP: disable dangerous commands from ctrl interface */
 #ifdef CONFIG_WPS
 	} else if (os_strcmp(buf, "WPS_PBC") == 0) {
 		int res = wpa_supplicant_ctrl_iface_wps_pbc(wpa_s, NULL);
@@ -8786,6 +8794,7 @@
 	} else if (os_strcmp(buf, "WPS_CANCEL") == 0) {
 		if (wpas_wps_cancel(wpa_s))
 			reply_len = -1;
+#if 0 /* CLIP: disable dangerous commands from ctrl interface */
 #ifdef CONFIG_WPS_NFC
 	} else if (os_strcmp(buf, "WPS_NFC") == 0) {
 		if (wpa_supplicant_ctrl_iface_wps_nfc(wpa_s, NULL))
@@ -8862,6 +8871,7 @@
 			wpa_s, buf + 24, reply, reply_size);
 #endif /* CONFIG_WPS_NFC */
 #endif /* CONFIG_WPS_ER */
+#endif /* CLIP: disable dangerous commands from ctrl interface */
 #endif /* CONFIG_WPS */
 #ifdef CONFIG_IBSS_RSN
 	} else if (os_strncmp(buf, "IBSS_RSN ", 9) == 0) {
@@ -9113,6 +9123,7 @@
 	} else if (os_strcmp(buf, "ABORT_SCAN") == 0) {
 		if (wpas_abort_ongoing_scan(wpa_s) < 0)
 			reply_len = -1;
+#if 0 /* CLIP: disable dangerous commands from ctrl interface */
 	} else if (os_strncmp(buf, "SELECT_NETWORK ", 15) == 0) {
 		if (wpa_supplicant_ctrl_iface_select_network(wpa_s, buf + 15))
 			reply_len = -1;
@@ -9162,9 +9173,11 @@
 	} else if (os_strncmp(buf, "GET_CAPABILITY ", 15) == 0) {
 		reply_len = wpa_supplicant_ctrl_iface_get_capability(
 			wpa_s, buf + 15, reply, reply_size);
+#endif /* CLIP: disable dangerous commands from ctrl interface */
 	} else if (os_strncmp(buf, "AP_SCAN ", 8) == 0) {
 		if (wpa_supplicant_ctrl_iface_ap_scan(wpa_s, buf + 8))
 			reply_len = -1;
+#if 0 /* CLIP: disable dangerous commands from ctrl interface */
 	} else if (os_strncmp(buf, "SCAN_INTERVAL ", 14) == 0) {
 		if (wpa_supplicant_ctrl_iface_scan_interval(wpa_s, buf + 14))
 			reply_len = -1;
@@ -9353,6 +9366,7 @@
 	} else if (os_strncmp(buf, "GET_PREF_FREQ_LIST ", 19) == 0) {
 		reply_len = wpas_ctrl_iface_get_pref_freq_list(
 			wpa_s, buf + 19, reply, reply_size);
+#endif /* CLIP: disable dangerous commands from ctrl interface */
 	} else {
 		os_memcpy(reply, "UNKNOWN COMMAND\n", 16);
 		reply_len = 16;
