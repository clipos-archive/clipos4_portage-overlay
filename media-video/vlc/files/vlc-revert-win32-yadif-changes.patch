commit 8396674d75cf0bbd436d1ab28e95a4ec81069d91
Author: Yves-Alexis Perez <clipos@ssi.gouv.fr>
Date:   Wed Aug 27 18:42:27 2014 +0200

    Revert to 9540c061b2580d9159a01908e8aacbb96bc021f4

diff --git a/modules/video_filter/deinterlace/yadif_template.h b/modules/video_filter/deinterlace/yadif_template.h
index df4897d..f70d249 100644
--- a/modules/video_filter/deinterlace/yadif_template.h
+++ b/modules/video_filter/deinterlace/yadif_template.h
@@ -10,7 +10,7 @@
  *
  * FFmpeg is distributed in the hope that it will be useful,
  * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  * GNU General Public License for more details.
  *
  * You should have received a copy of the GNU General Public License along
@@ -18,18 +18,6 @@
  * 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
  */
 
-/* For some reason clang doens't like that %%rip macro */
-
-#if defined(__x86_64__) && !defined(__APPLE__)
-#define MANGLE(a) "" #a "(%%rip)"
-#define MANGLEVARIABLES [mode] "g"(mode),
-#else
-#define MANGLE(a) "" "%["#a"]"
-#define MANGLEVARIABLES [pw_1] "m"(pw_1),\
-             [pb_1] "m"(pb_1),\
-             [mode] "g"(mode),
-#endif
-
 #ifdef COMPILE_TEMPLATE_SSE
 #define REGMM "xmm"
 #define MM "%%"REGMM
@@ -77,7 +65,7 @@
             MOVQ"      "MM"2, "MM"5 \n\t"\
             "pxor      "MM"3, "MM"4 \n\t"\
             "pavgb     "MM"3, "MM"5 \n\t"\
-            "pand      "MANGLE(pb_1)", "MM"4 \n\t"\
+            "pand     %[pb_1], "MM"4 \n\t"\
             "psubusb   "MM"4, "MM"5 \n\t"\
             PSRL1(MM"5")                 \
             "punpcklbw "MM"7, "MM"5 \n\t" /* (cur[x-refs+j] + cur[x+refs-j])>>1 */\
@@ -107,7 +95,7 @@
 
 #define CHECK2 /* pretend not to have checked dir=2 if dir=1 was bad.\
                   hurts both quality and speed, but matches the C version. */\
-            "paddw    "MANGLE(pw_1)", "MM"6 \n\t"\
+            "paddw    %[pw_1], "MM"6 \n\t"\
             "psllw     $14,   "MM"6 \n\t"\
             "paddsw    "MM"6, "MM"2 \n\t"\
             MOVQ"      "MM"0, "MM"3 \n\t"\
@@ -118,15 +106,17 @@
             "por       "MM"5, "MM"3 \n\t"\
             MOVQ"      "MM"3, "MM"1 \n\t"
 
-#if defined(__MINGW32__) && defined(_WIN32) && !defined(_WIN64)
+#if defined(__MINGW32__) && defined(WIN32) && !defined(WIN64)
 __attribute__((__force_align_arg_pointer__))
 #endif
 VLC_TARGET static void RENAME(yadif_filter_line)(uint8_t *dst,
                               uint8_t *prev, uint8_t *cur, uint8_t *next,
                               int w, int prefs, int mrefs, int parity, int mode)
 {
-    uint8_t tmpU[5*16];
-    uint8_t *tmp= (uint8_t*)(((uintptr_t)(tmpU+15)) & ~15);
+    DECLARE_ALIGNED(16, uint8_t, tmp0[16]);
+    DECLARE_ALIGNED(16, uint8_t, tmp1[16]);
+    DECLARE_ALIGNED(16, uint8_t, tmp2[16]);
+    DECLARE_ALIGNED(16, uint8_t, tmp3[16]);
     int x;
 
 #define FILTER\
@@ -140,9 +130,9 @@ VLC_TARGET static void RENAME(yadif_filter_line)(uint8_t *dst,
             MOVQ"      "MM"3, "MM"4 \n\t"\
             "paddw     "MM"2, "MM"3 \n\t"\
             "psraw     $1,    "MM"3 \n\t" /* d = (prev2[x] + next2[x])>>1 */\
-            MOVQ"      "MM"0,   (%[tmp]) \n\t" /* c */\
-            MOVQ"      "MM"3, 16(%[tmp]) \n\t" /* d */\
-            MOVQ"      "MM"1, 32(%[tmp]) \n\t" /* e */\
+            MOVQ"      "MM"0, %[tmp0] \n\t" /* c */\
+            MOVQ"      "MM"3, %[tmp1] \n\t" /* d */\
+            MOVQ"      "MM"1, %[tmp2] \n\t" /* e */\
             "psubw     "MM"4, "MM"2 \n\t"\
             PABS(      MM"4", MM"2") /* temporal_diff0 */\
             LOAD("(%[prev],%[mrefs])", MM"3") /* prev[x-refs] */\
@@ -164,7 +154,7 @@ VLC_TARGET static void RENAME(yadif_filter_line)(uint8_t *dst,
             "paddw     "MM"4, "MM"3 \n\t" /* temporal_diff2 */\
             "psrlw     $1,    "MM"3 \n\t"\
             "pmaxsw    "MM"3, "MM"2 \n\t"\
-            MOVQ"      "MM"2, 48(%[tmp]) \n\t" /* diff */\
+            MOVQ"      "MM"2, %[tmp3] \n\t" /* diff */\
 \
             "paddw     "MM"0, "MM"1 \n\t"\
             "paddw     "MM"0, "MM"0 \n\t"\
@@ -183,7 +173,7 @@ VLC_TARGET static void RENAME(yadif_filter_line)(uint8_t *dst,
             "punpcklbw "MM"7, "MM"3 \n\t" /* ABS(cur[x-refs+1] - cur[x+refs+1]) */\
             "paddw     "MM"2, "MM"0 \n\t"\
             "paddw     "MM"3, "MM"0 \n\t"\
-            "psubw    "MANGLE(pw_1)", "MM"0 \n\t" /* spatial_score */\
+            "psubw    %[pw_1], "MM"0 \n\t" /* spatial_score */\
 \
             CHECK(-2,0)\
             CHECK1\
@@ -195,7 +185,7 @@ VLC_TARGET static void RENAME(yadif_filter_line)(uint8_t *dst,
             CHECK2\
 \
             /* if(p->mode<2) ... */\
-            MOVQ"    48(%[tmp]), "MM"6 \n\t" /* diff */\
+            MOVQ"    %[tmp3], "MM"6 \n\t" /* diff */\
             "cmpl      $2, %[mode] \n\t"\
             "jge       1f \n\t"\
             LOAD("(%["prev2"],%[mrefs],2)", MM"2") /* prev2[x-2*refs] */\
@@ -206,9 +196,9 @@ VLC_TARGET static void RENAME(yadif_filter_line)(uint8_t *dst,
             "paddw     "MM"5, "MM"3 \n\t"\
             "psrlw     $1,    "MM"2 \n\t" /* b */\
             "psrlw     $1,    "MM"3 \n\t" /* f */\
-            MOVQ"   (%[tmp]), "MM"4 \n\t" /* c */\
-            MOVQ" 16(%[tmp]), "MM"5 \n\t" /* d */\
-            MOVQ" 32(%[tmp]), "MM"7 \n\t" /* e */\
+            MOVQ"    %[tmp0], "MM"4 \n\t" /* c */\
+            MOVQ"    %[tmp1], "MM"5 \n\t" /* d */\
+            MOVQ"    %[tmp2], "MM"7 \n\t" /* e */\
             "psubw     "MM"4, "MM"2 \n\t" /* b-c */\
             "psubw     "MM"7, "MM"3 \n\t" /* f-e */\
             MOVQ"      "MM"5, "MM"0 \n\t"\
@@ -227,7 +217,7 @@ VLC_TARGET static void RENAME(yadif_filter_line)(uint8_t *dst,
             "pmaxsw    "MM"4, "MM"6 \n\t" /* diff= MAX3(diff, min, -max); */\
             "1: \n\t"\
 \
-            MOVQ" 16(%[tmp]), "MM"2 \n\t" /* d */\
+            MOVQ"    %[tmp1], "MM"2 \n\t" /* d */\
             MOVQ"      "MM"2, "MM"3 \n\t"\
             "psubw     "MM"6, "MM"2 \n\t" /* d-diff */\
             "paddw     "MM"6, "MM"3 \n\t" /* d+diff */\
@@ -235,13 +225,19 @@ VLC_TARGET static void RENAME(yadif_filter_line)(uint8_t *dst,
             "pminsw    "MM"3, "MM"1 \n\t" /* d = clip(spatial_pred, d-diff, d+diff); */\
             "packuswb  "MM"1, "MM"1 \n\t"\
 \
-            ::[prev] "r"(prev),\
+            :[tmp0]"=m"(tmp0),\
+             [tmp1]"=m"(tmp1),\
+             [tmp2]"=m"(tmp2),\
+             [tmp3]"=m"(tmp3)\
+            :[prev] "r"(prev),\
              [cur]  "r"(cur),\
              [next] "r"(next),\
              [prefs]"r"((x86_reg)prefs),\
              [mrefs]"r"((x86_reg)mrefs),\
-             MANGLEVARIABLES\
-             [tmp]  "r"(tmp)\
+             [pw_1] "m"(pw_1),\
+             [pb_1] "m"(pb_1),\
+             [mode] "g"(mode)\
+            :REGMM"0",REGMM"1",REGMM"2",REGMM"3",REGMM"4",REGMM"5",REGMM"6",REGMM"7"\
         );\
         __asm__ volatile(MOV" "MM"1, %0" :"=m"(*dst));\
         dst += STEP;\
